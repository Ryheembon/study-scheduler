version: '3'

services:
  web:
    image: my-web-app
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: development
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://root:example@db:27017/scheduler?authSource=admin&directConnection=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    container_name: study-scheduler-web
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      db:
        condition: service_healthy

  # Add a development database service
  db:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=scheduler
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    container_name: study-scheduler-db
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    command: [--auth]

volumes:
  mongodb_data:

networks:
  default:
    name: my-web-app-network